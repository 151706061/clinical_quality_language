<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:quick="http://org.hl7.fhir" xmlns:a="urn:hl7-org:cql-annotations:r1" xsi:schemaLocation="urn:hl7-org:elm:r1 ..\src\cql-lm\schema\elm\library.xsd urn:hl7-org:cql-annotations:r1 ..\src\cql-lm\schema\elm\cqlannotations.xsd">
    <identifier id="CMS153_CDS" version="2"/>
    <schemaIdentifier id="urn:hl7-org-elm" version="r1"/>
    <usings>
        <def localId="1" localIdentifier="QUICK" uri="http://org.hl7.fhir"/>
    </usings>
    <valueSets>
        <def localId="2" name="Female Administrative Sex" id="2.16.840.1.113883.3.560.100.2"/>
        <def localId="3" name="Other Female Reproductive Conditions" id="2.16.840.1.113883.3.464.1003.111.12.1006"/>
        <def localId="4" name="Genital Herpes" id="2.16.840.1.113883.3.464.1003.110.12.1049"/>
        <def localId="5" name="Genococcal Infections and Venereal Diseases" id="2.16.840.1.113883.3.464.1003.112.12.1001"/>
        <def localId="6" name="Inflammatory Diseases of Female Reproductive Organs" id="2.16.840.1.113883.3.464.1003.112.12.1004"/>
        <def localId="7" name="Chlamydia" id="2.16.840.1.113883.3.464.1003.112.12.1003"/>
        <def localId="8" name="HIV" id="2.16.840.1.113883.3.464.1003.120.12.1003"/>
        <def localId="9" name="Syphilis" id="2.16.840.1.113883.3.464.1003.112.12.1002"/>
        <def localId="10" name="Complications of Pregnancy, Childbirth and the Puerperium" id="2.16.840.1.113883.3.464.1003.111.12.1012"/>
        <def localId="11" name="Pregnancy Test" id="2.16.840.1.113883.3.464.1003.111.12.1011"/>
        <def localId="12" name="Pap Test" id="2.16.840.1.113883.3.464.1003.108.12.1017"/>
        <def localId="13" name="Lab Tests During Pregnancy" id="2.16.840.1.113883.3.464.1003.111.12.1007"/>
        <def localId="14" name="Lab Tests for Sexually Transmitted Infections" id="2.16.840.1.113883.3.464.1003.110.12.1051"/>
        <def localId="15" name="Chlamydia Screening" id="2.16.840.1.113883.3.464.1003.110.12.1052"/>
        <def localId="16" name="Reason for not performing Chlamydia Screening" id="TBD"/>
    </valueSets>
    <statements>
        <def localId="30" name="InDemographic" context="PATIENT">
            <annotation xsi:type="a:Annotation">
                <a:s r="30">define  =&#xd;
                    <a:s r="29">
                        <a:s r="25">
                            <a:s r="20">AgeInYears() <a:s r="18">
                                <a:s r="17"/>()</a:s> >= <a:s r="19">16</a:s>
                            </a:s> and <a:s r="24">AgeInYears() <a:s r="22">
                            <a:s r="21"/>()</a:s> &lt; <a:s r="23">24</a:s>
                        </a:s>
                        </a:s> and <a:s r="28">
                        <a:s r="26"/> in <a:s r="27"/></a:s>
                    </a:s>
                </a:s>
            </annotation>
            <expression localId="29" xsi:type="And">
                <operand localId="25" xsi:type="And">
                    <operand localId="20" xsi:type="GreaterOrEqual">
                        <operand localId="18" name="AgeInYears" xsi:type="FunctionRef"/>
                        <operand localId="19" valueType="xsd:int" value="16" xsi:type="Literal"/>
                    </operand>
                    <operand localId="24" xsi:type="Less">
                        <operand localId="22" name="AgeInYears" xsi:type="FunctionRef"/>
                        <operand localId="23" valueType="xsd:int" value="24" xsi:type="Literal"/>
                    </operand>
                </operand>
                <operand localId="28" xsi:type="In">
                    <operand localId="26" xsi:type="Property" path="gender"/>
                    <operand localId="27" name="Female Administrative Sex" xsi:type="ValueSetRef"/>
                </operand>
            </expression>
        </def>
        <def localId="66" name="SexuallyActive" context="PATIENT">
            <annotation xsi:type="a:Annotation">
                <a:s r="66">define  =&#xd;
                    <a:s r="65">
                        <a:s r="62">
                            <a:s r="59">
                                <a:s r="56">
                                    <a:s r="53">
                                        <a:s r="50">
                                            <a:s r="47">
                                                <a:s r="44">
                                                    <a:s r="41">
                                                        <a:s r="38">
                                                            <a:s r="35">
                                                                <a:s r="32">exists (<a:s r="31">[: ]</a:s>)</a:s>&#xd;
                                                                or <a:s r="34">exists (<a:s r="33">[: ]</a:s>)</a:s>
                                                            </a:s>&#xd;
                                                            or <a:s r="37">exists (<a:s r="36">[: ]</a:s>)</a:s>
                                                        </a:s>&#xd;
                                                        or <a:s r="40">exists (<a:s r="39">[: ]</a:s>)</a:s>
                                                    </a:s>&#xd;
                                                    or <a:s r="43">exists (<a:s r="42">[: ]</a:s>)</a:s>
                                                </a:s>&#xd;
                                                or <a:s r="46">exists (<a:s r="45">[: ]</a:s>)</a:s>
                                            </a:s>&#xd;
                                            or <a:s r="49">exists (<a:s r="48">[: ]</a:s>)</a:s>
                                        </a:s>&#xd;
                                        or <a:s r="52">exists (<a:s r="51">[: ]</a:s>)</a:s>
                                    </a:s>&#xd;
                                    or <a:s r="55">exists (<a:s r="54">[, : ]</a:s>)</a:s>
                                </a:s>&#xd;
                                or <a:s r="58">exists (<a:s r="57">[, : ]</a:s>)</a:s>
                            </a:s>&#xd;
                            or <a:s r="61">exists (<a:s r="60">[, : ]</a:s>)</a:s>
                        </a:s>&#xd;
                        or <a:s r="64">exists (<a:s r="63">[, : ]</a:s>)</a:s>
                    </a:s>
                </a:s>
            </annotation>
            <expression localId="65" xsi:type="Or">
                <operand localId="62" xsi:type="Or">
                    <operand localId="59" xsi:type="Or">
                        <operand localId="56" xsi:type="Or">
                            <operand localId="53" xsi:type="Or">
                                <operand localId="50" xsi:type="Or">
                                    <operand localId="47" xsi:type="Or">
                                        <operand localId="44" xsi:type="Or">
                                            <operand localId="41" xsi:type="Or">
                                                <operand localId="38" xsi:type="Or">
                                                    <operand localId="35" xsi:type="Or">
                                                        <operand localId="32" xsi:type="Exists">
                                                            <operand localId="31" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                                                <codes name="Other Female Reproductive Conditions" xsi:type="ValueSetRef"/>
                                                            </operand>
                                                        </operand>
                                                        <operand localId="34" xsi:type="Exists">
                                                            <operand localId="33" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                                                <codes name="Genital Herpes" xsi:type="ValueSetRef"/>
                                                            </operand>
                                                        </operand>
                                                    </operand>
                                                    <operand localId="37" xsi:type="Exists">
                                                        <operand localId="36" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                                            <codes name="Genococcal Infections and Venereal Diseases" xsi:type="ValueSetRef"/>
                                                        </operand>
                                                    </operand>
                                                </operand>
                                                <operand localId="40" xsi:type="Exists">
                                                    <operand localId="39" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                                        <codes name="Inflammatory Diseases of Female Reproductive Organs" xsi:type="ValueSetRef"/>
                                                    </operand>
                                                </operand>
                                            </operand>
                                            <operand localId="43" xsi:type="Exists">
                                                <operand localId="42" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                                    <codes name="Chlamydia" xsi:type="ValueSetRef"/>
                                                </operand>
                                            </operand>
                                        </operand>
                                        <operand localId="46" xsi:type="Exists">
                                            <operand localId="45" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                                <codes name="HIV" xsi:type="ValueSetRef"/>
                                            </operand>
                                        </operand>
                                    </operand>
                                    <operand localId="49" xsi:type="Exists">
                                        <operand localId="48" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                            <codes name="Syphilis" xsi:type="ValueSetRef"/>
                                        </operand>
                                    </operand>
                                </operand>
                                <operand localId="52" xsi:type="Exists">
                                    <operand localId="51" dataType="quick:ConditionOccurrence" codeProperty="code" xsi:type="Retrieve">
                                        <codes name="Complications of Pregnancy, Childbirth and the Puerperium" xsi:type="ValueSetRef"/>
                                    </operand>
                                </operand>
                            </operand>
                            <operand localId="55" xsi:type="Exists">
                                <operand localId="54" dataType="xsd:LaboratoryTestOrderOccurrence" xsi:type="Retrieve">
                                    <codes name="Pregnancy Test" xsi:type="ValueSetRef"/>
                                </operand>
                            </operand>
                        </operand>
                        <operand localId="58" xsi:type="Exists">
                            <operand localId="57" dataType="xsd:LaboratoryTestOrderOccurrence" xsi:type="Retrieve">
                                <codes name="Pap Test" xsi:type="ValueSetRef"/>
                            </operand>
                        </operand>
                    </operand>
                    <operand localId="61" xsi:type="Exists">
                        <operand localId="60" dataType="xsd:LaboratoryTestOrderOccurrence" xsi:type="Retrieve">
                            <codes name="Lab Tests During Pregnancy" xsi:type="ValueSetRef"/>
                        </operand>
                    </operand>
                </operand>
                <operand localId="64" xsi:type="Exists">
                    <operand localId="63" dataType="xsd:LaboratoryTestOrderOccurrence" xsi:type="Retrieve">
                        <codes name="Lab Tests for Sexually Transmitted Infections" xsi:type="ValueSetRef"/>
                    </operand>
                </operand>
            </expression>
        </def>
        <def localId="102" name="NoScreening" context="PATIENT">
            <annotation xsi:type="a:Annotation">
                <a:s r="102">define  =&#xd;
                    <a:s r="101">
                        <a:s r="97">
                            <a:s r="85">not <a:s r="84">exists (<a:s r="83"> where <a:s r="82">
                                <a:s r="70">
                                    <a:s r="69"/>.</a:s> during <a:s r="77">interval[<a:s r="74">
                                <a:s r="72">
                                    <a:s r="71"/>()</a:s> - <a:s r="73">1 years</a:s>
                            </a:s>, <a:s r="76">
                                <a:s r="75"/>()</a:s>]</a:s>
                                <a:s r="78">during</a:s> interval[Today() - 1 years, Today()] and <a:s r="81">
                                <a:s r="80">
                                    <a:s r="79"/>.</a:s> is not null</a:s>
                            </a:s>
                            </a:s>)</a:s>
                            </a:s>&#xd;
                            and <a:s r="96">not <a:s r="95">exists (<a:s r="94"> where <a:s r="88"/>. during <a:s r="92">interval[<a:s r="90">
                            <a:s r="89"/>()</a:s>, <a:s r="91">null</a:s>]</a:s>
                            <a:s r="93">during</a:s> interval[Today(), null]</a:s>)</a:s>
                        </a:s>
                        </a:s>&#xd;
                        and <a:s r="100">not <a:s r="99">exists (<a:s r="98">[: ]</a:s>)</a:s>
                    </a:s>
                    </a:s>
                </a:s>
            </annotation>
            <expression localId="101" xsi:type="And">
                <operand localId="97" xsi:type="And">
                    <operand localId="85" xsi:type="Not">
                        <operand localId="84" xsi:type="Exists">
                            <operand localId="83" xsi:type="Query">
                                <source localId="68" alias="R">
                                    <expression localId="67" dataType="quick:SimpleObservationOccurrence" codeProperty="code" xsi:type="Retrieve">
                                        <codes name="Chlamydia Screening" xsi:type="ValueSetRef"/>
                                    </expression>
                                </source>
                                <where localId="82" xsi:type="And">
                                    <operand localId="78" xsi:type="IncludedIn">
                                        <operand localId="70" path="observedAtTime" scope="R" xsi:type="Property"/>
                                        <operand localId="77" lowClosed="true" highClosed="true" xsi:type="Interval">
                                            <low localId="74" xsi:type="Subtract">
                                                <operand localId="72" name="Today" xsi:type="FunctionRef"/>
                                                <operand localId="73" value="1" unit="years" xsi:type="Quantity"/>
                                            </low>
                                            <high localId="76" name="Today" xsi:type="FunctionRef"/>
                                        </operand>
                                    </operand>
                                    <operand localId="81" xsi:type="Not">
                                        <operand xsi:type="IsNull">
                                            <operand localId="80" path="result" scope="R" xsi:type="Property"/>
                                        </operand>
                                    </operand>
                                </where>
                            </operand>
                        </operand>
                    </operand>
                    <operand localId="96" xsi:type="Not">
                        <operand localId="95" xsi:type="Exists">
                            <operand localId="94" xsi:type="Query">
                                <source localId="87" alias="P">
                                    <expression localId="86" dataType="xsd:ProcedurePlanOccurrence" xsi:type="Retrieve">
                                        <codes name="Chlamydia Screening" xsi:type="ValueSetRef"/>
                                    </expression>
                                </source>
                                <where localId="93" xsi:type="IncludedIn">
                                    <operand localId="88" xsi:type="Property" path="performanceTime"/>
                                    <operand localId="92" lowClosed="true" highClosed="true" xsi:type="Interval">
                                        <low localId="90" name="Today" xsi:type="FunctionRef"/>
                                        <high localId="91" xsi:type="Null"/>
                                    </operand>
                                </where>
                            </operand>
                        </operand>
                    </operand>
                </operand>
                <operand localId="100" xsi:type="Not">
                    <operand localId="99" xsi:type="Exists">
                        <operand localId="98" dataType="quick:SimpleObservationOccurrence" codeProperty="code" xsi:type="Retrieve">
                            <codes name="Reason for not performing Chlamydia Screening" xsi:type="ValueSetRef"/>
                        </operand>
                    </operand>
                </operand>
            </expression>
        </def>
        <def localId="108" name="NeedScreening" context="PATIENT">
            <annotation xsi:type="a:Annotation">
                <a:s r="108">define  = <a:s r="107">
                    <a:s r="105">
                        <a:s r="103"/> and <a:s r="104"/></a:s> and <a:s r="106"/></a:s>
                </a:s>
            </annotation>
            <expression localId="107" xsi:type="And">
                <operand localId="105" xsi:type="And">
                    <operand localId="103" name="InDemographic" xsi:type="ExpressionRef"/>
                    <operand localId="104" name="SexuallyActive" xsi:type="ExpressionRef"/>
                </operand>
                <operand localId="106" name="NoScreening" xsi:type="ExpressionRef"/>
            </expression>
        </def>
    </statements>
</library>