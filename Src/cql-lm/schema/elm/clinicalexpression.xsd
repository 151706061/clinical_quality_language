<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2013 sp1 (http://www.altova.com) by Bryn Rhodes (Database Consulting Group) -->
<!-- This file is a direct copy of clinicalexpression.xsd from the CDS KAS with the following changes
		Namespace changed to urn:hl7-org:elm:r1
		dt namespace changed to http://hl7.org/fhir
		EventType and DataEventType enum references removed
		timeOffset element removed from RequestBase
		triggerType attribute removed from RequestBase
		ClinicalRequestDef type added
		ValueSetDef added
		ValueSetRef added
		IsEquivalent added
		Quantity added
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:hl7-org:elm:r1" xmlns:sch="http://purl.oclc.org/dsdl/schematron" targetNamespace="urn:hl7-org:elm:r1" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation>
			This file defines the expression extensions that introduce clinically relevant dependencies such as clinical data access, terminology, and value set considerations.
		</xs:documentation>
	</xs:annotation>
	<xs:include schemaLocation="expression.xsd"/>
	<xs:complexType name="Retrieve">
		<xs:annotation>
			<xs:documentation>The retrieve expression defines clinical data that will be used by the artifact. This expression allows clinically relevant filtering criteria to be provided in well-defined and computable way. This operation defines the integration boundary for artifacts. The result of a retrieve is defined to return the same data for subsequent invocations within the same evaluation request. This means in particular that patient data updates made during the evaluation request are not visible to the artifact. In effect, the patient data is a snapshot of the data as of the start of the evaluation. This ensures strict deterministic and functional behavior of the artifact, and allows the implementation engine freedom to cache intermediate results in order to improve performance.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression">
				<xs:sequence>
					<xs:element name="codes" type="Expression" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The codes element optionally allows a set of codes to be provided. The codes list restricts the set of clinical statements returned to only those clinical statements that matched some code in the set.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="dateRange" type="Expression" minOccurs="0" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>The dateRange element optionally allows a date range to be provided. The clinical statements returned would be only those clinical statements whose date fell within the range specified.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="dataType" type="xs:QName" use="required">
					<xs:annotation>
						<xs:documentation>The dataType attribute specifies the type of data being requested.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="templateId" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The templateId attribute specifies an optional template to be used. If specified, the retrieve is defined to return only objects that conform to the template.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="idProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The idProperty attribute specifies which property of the model contains the Id for the clinical statement.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The codeProperty attribute optionally specifies which property of the model contains the Code or Codes for the clinical statement.
						
Note that this property could potentially be specified elsewhere as part of an implementation catalog, rather than on each Retrieve expression, but allowing them at the retrieve expression level gives the most flexibility.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="dateProperty" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The dateProperty attribute optionally specifies which property of the model contains the clinically relevant date for the clinical statement.

Note that this property could potentially be specified elsewhere as part of an implementation catalog, rather than on each Retrieve expression, but allowing them at the request expression level gives the most flexibility.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="scope" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The scope attribute optionally specifies a name for the scope for this operator that can be used within expressions to reference the current element.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ValueSetDef">
		<xs:annotation>
			<xs:documentation>The ValueSetDef type defines a value set identifier that can be referenced by name anywhere within an expression.

The id specifies the globally unique identifier for the value set. This may be an HL7 OID, a FHIR URL, or a CTS2 value set URL.

If version is specified, it will be used to resolve the version of the value set definition to be used. Otherwise, the most current published version of the value set is assumed. 

If codeSystemVersions is specified, it will be used to resolve the versions of code systems used within the value set definition to construct the expansion set. The value of the codeSystemVersions attribute must contain a list of pairs, separated by spaces, where each pair specifies the version of a code system referenced by the value set definition.

Note that the recommended approach to statically binding to an expansion set is to use a value set definition that specifies the version of each code system used. The codeSystemVersions attribute is provided only to ensure static binding can be achieved when the value set definition does not specify code system versions as part of the definition header.			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Element">
				<xs:attribute name="name" type="xs:string"/>
				<xs:attribute name="id" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>The unique identifier of the value set to be retrieved.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="version" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The version of the value set to be retrieved. If no version is provided, the most current published version of the value set is assumed.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="codeSystemVersions" type="xs:string" use="optional">
					<xs:annotation>
						<xs:documentation>The version of each code system that should be used to construct the expansion set. Note that the recommended approach to statically binding to an expansion set is to use a value set definition that specifies the version of each code system used. The codeSystemVersions attribute is provided only to ensure static binding can be achieved when the value set definition does not specify code system versions as part of the definition header.
						
If this attribute is provided, the value must contain a list of pairs, separated by spaces, where each pair specifies the version of a code system referenced by the value set definition.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ValueSetRef">
		<xs:annotation>
			<xs:documentation>The ValueSetRef expression allows a previously defined named value set to be referenced within an expression. Conceptually, referencing a value set returns the expansion set for the value set as a list of codes.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression">
				<xs:attribute name="name" type="xs:string"/>
				<xs:attribute name="libraryName" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Quantity">
		<xs:annotation>
			<xs:documentation>The Quantity type defines a clinical quantity. For example, the quantity 10 days or 30 mmHg. The value is a decimal, while the unit is expected to be a valid UCUM unit.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression">
				<xs:attribute name="value" type="xs:decimal"/>
				<xs:attribute name="unit" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInYears">
		<xs:annotation>
			<xs:documentation>Calculates the age in years of a person born on the given date as of today.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInMonths">
		<xs:annotation>
			<xs:documentation>Calculates the age in months of a person born on the given date as of today.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInDays">
		<xs:annotation>
			<xs:documentation>Calculates the age in days of a person born on the given date as of today.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInHours">
		<xs:annotation>
			<xs:documentation>Calculates the age in hours of a person born at the given time as of now.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInMinutes">
		<xs:annotation>
			<xs:documentation>Calculates the age in minutes of a person born at the given time as of now.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInSeconds">
		<xs:annotation>
			<xs:documentation>Calculates the age in seconds of a person born at the given time as of now.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInYearsAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in years of a person born on the first date as of the second date.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BinaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInMonthsAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in months of a person born on the first date as of the second date.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BinaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInDaysAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in days of a person born on the first date as of the second date.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BinaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInHoursAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in hours of a person born at the first time as of the second time.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BinaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInMinutesAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in minutes of a person born at the first time as of the second time.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BinaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CalculateAgeInSecondsAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in seconds of a person born at the first time as of the second time.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="BinaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInYears">
		<xs:annotation>
			<xs:documentation>Calculates the age in years of the patient as of today using their birthdate.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInMonths">
		<xs:annotation>
			<xs:documentation>Calculates the age in months of the patient as of today using their birthdate.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInDays">
		<xs:annotation>
			<xs:documentation>Calculates the age in days of the patient as of today using their birthdate.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInHours">
		<xs:annotation>
			<xs:documentation>Calculates the age in hours of the patient as of now using their birthtime.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInMinutes">
		<xs:annotation>
			<xs:documentation>Calculates the age in minutes of the patient as of now using their birthtime.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInSeconds">
		<xs:annotation>
			<xs:documentation>Calculates the age in seconds of the patient as of now using their birthtime.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Expression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInYearsAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in years of the patient as of the given date using their birthdate.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInMonthsAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in months of the patient as of the given date using their birthdate.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInDaysAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in days of the patient as of the given date using their birthdate.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInHoursAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in hours of the patient as of the given time using their birthtime.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInMinutesAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in minutes of the patient as of the given time using their birthtime.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AgeInSecondsAt">
		<xs:annotation>
			<xs:documentation>Calculates the age in seconds of the patient as of the given time using their birthtime.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="UnaryExpression"/>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
